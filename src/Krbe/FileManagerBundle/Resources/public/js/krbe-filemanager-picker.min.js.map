{"version":3,"file":"krbe-filemanager-picker.min.js","sources":["krbe-filemanager-picker.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n    // Configuration par défaut\n    const defaultConfig = {\n        wrapperClass: 'krbe-filemanager-wrapper',\n        inputAttribute: 'data-krbe-filemanager',\n        inputText: 'Choisir un fichier',\n        inputClass: 'krbe-filemanager-input',\n        buttonSelectText: 'Choisir un fichier',\n        buttonSelectClass: 'krbe-filemanager-select-btn',\n        buttonResetText: 'Réinitialiser',\n        buttonResetClass: 'krbe-filemanager-reset-btn',\n        previewClass: 'krbe-filemanager-preview',\n    };\n\n    // Appliquer la configuration personnalisée si elle existe\n    if (window.KrbeFileManagerConfig) {\n        Object.assign(defaultConfig, window.KrbeFileManagerConfig);\n    }\n\n    // Fonction pour surcharger la configuration\n    window.KrbeFileManager = {\n        setConfig: function(customConfig) {\n            Object.assign(defaultConfig, customConfig);\n            // Réinitialiser tous les inputs avec la nouvelle configuration\n            initAllFileManagerInputs();\n        }\n    };\n\n    // Fonction pour générer un ID aléatoire\n    function generateRandomId() {\n        const chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\n        let id = 'krbe-filemanager-';\n        for (let i = 0; i < 10; i++) {\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return id;\n    }\n\n    // Fonction pour créer le wrapper et le bouton pour un input\n    function createFileManagerWrapper(input) {\n        // Vérifier si l'input est déjà initialisé\n        if (input.dataset.filemanagerInitialized === \"true\") {\n            return;\n        }\n        input.dataset.filemanagerInitialized = \"true\";\n\n        // Générer un ID si l'input n'en a pas\n        if (!input.id) {\n            input.id = generateRandomId();\n        }\n\n        // Rendre l'input readonly\n        input.readOnly = true;\n\n        // Créer le wrapper\n        const wrapper = document.createElement('div');\n        wrapper.className = defaultConfig.wrapperClass;\n\n        // Créer le conteneur pour l'aperçu de l'image si c'est un input pour images\n        let previewContainer = null;\n        if (input.getAttribute(defaultConfig.inputAttribute) === 'img') {\n            previewContainer = document.createElement('div');\n            previewContainer.className = defaultConfig.previewClass;\n            wrapper.appendChild(previewContainer);\n        }\n\n        // Créer le bouton de sélection\n        const selectButton = document.createElement('button');\n        selectButton.type = 'button';\n        selectButton.textContent = defaultConfig.buttonSelectText;\n        selectButton.className = defaultConfig.buttonSelectClass;\n        selectButton.setAttribute('role', 'button');\n        selectButton.setAttribute('tabindex', '0');\n\n        // Créer le bouton de réinitialisation\n        const resetButton = document.createElement('button');\n        resetButton.type = 'button';\n        resetButton.textContent = defaultConfig.buttonResetText;\n        resetButton.className = defaultConfig.buttonResetClass;\n        resetButton.setAttribute('role', 'button');\n        resetButton.setAttribute('tabindex', '0');\n\n        // Ajouter la classe à l'input\n        input.classList.add(defaultConfig.inputClass);\n        input.setAttribute('tabindex', '0'); // Permettre le focus sur l'input\n        input.setAttribute('placeholder', defaultConfig.inputText); // Ajouter le placeholder\n\n        // Fonction pour ouvrir la modale\n        function openModal() {\n            const modal = document.getElementById('filemanager-modal');\n            if (modal) {\n                modal.style.display = 'block';\n                modal.dataset.targetInput = input.id;\n                modal.dataset.isImage = input.getAttribute(defaultConfig.inputAttribute) === 'img';\n            }\n        }\n\n        // Fonction pour gérer les événements tactiles et clic\n        function handleInteraction(e) {\n            e.preventDefault(); // Empêcher le comportement par défaut\n            openModal();\n        }\n\n        // Fonction pour réinitialiser l'input\n        function resetInput() {\n            input.value = '';\n            const previewContainer = wrapper.querySelector(`.${defaultConfig.previewClass}`);\n            if (previewContainer) {\n                previewContainer.innerHTML = '';\n            }\n            resetButton.style.display = 'none';\n            \n            // Émettre un événement personnalisé lors de la réinitialisation\n            const resetEvent = new CustomEvent('krbeFileManager:reset', {\n                detail: { input }\n            });\n            input.dispatchEvent(resetEvent);\n        }\n\n        // Fonction pour mettre à jour l'affichage du bouton de réinitialisation\n        function updateResetButtonVisibility() {\n            resetButton.style.display = input.value ? 'block' : 'none';\n        }\n\n        // Ajouter les événements tactiles et clic\n        selectButton.addEventListener('click', handleInteraction);\n        selectButton.addEventListener('touchend', handleInteraction);\n        resetButton.addEventListener('click', resetInput);\n        resetButton.addEventListener('touchend', function(e) {\n            e.preventDefault();\n            resetInput();\n        });\n\n        // Ajouter les événements sur l'input\n        input.addEventListener('click', handleInteraction);\n        input.addEventListener('touchend', handleInteraction);\n\n        // Observer les changements de valeur de l'input\n        const observer = new MutationObserver(function(mutations) {\n            mutations.forEach(function(mutation) {\n                if (mutation.type === 'attributes' && mutation.attributeName === 'value') {\n                    updateResetButtonVisibility();\n                }\n            });\n        });\n        observer.observe(input, { attributes: true });\n\n        // Vérifier la valeur initiale\n        updateResetButtonVisibility();\n\n        // Insérer le wrapper avant l'input\n        input.parentNode.insertBefore(wrapper, input);\n        wrapper.appendChild(input);\n        wrapper.appendChild(resetButton);\n        wrapper.appendChild(selectButton);\n    }\n\n    // Fonction pour initialiser tous les inputs de file manager sur la page\n    function initAllFileManagerInputs() {\n        const inputs = document.querySelectorAll(`input[${defaultConfig.inputAttribute}]`);\n        inputs.forEach(input => createFileManagerWrapper(input));\n    }\n\n    // Gérer le bouton de fermeture de la modale\n    document.addEventListener('click', function(e) {\n        if (e.target && e.target.classList.contains('filemanager-modal-close')) {\n            const modal = document.getElementById('filemanager-modal');\n            if (modal) {\n                modal.style.display = 'none';\n                delete modal.dataset.targetInput;\n                delete modal.dataset.isImage;\n            }\n        }\n    });\n\n    // Ajouter la gestion des événements tactiles sur le bouton de fermeture\n    document.addEventListener('touchend', function(e) {\n        if (e.target && e.target.classList.contains('filemanager-modal-close')) {\n            e.preventDefault();\n            const modal = document.getElementById('filemanager-modal');\n            if (modal) {\n                modal.style.display = 'none';\n                delete modal.dataset.targetInput;\n                delete modal.dataset.isImage;\n            }\n        }\n    });\n\n    // Écouter les messages du file manager\n    window.addEventListener('message', function(event) {\n        console.log('Message reçu:', event.data); // Debug log\n        \n        // Vérifier l'origine du message pour la sécurité\n        if (!event.origin) {\n            console.warn('Message sans origine reçu');\n            return;\n        }\n\n        if (event.data && event.data.type === 'filemanager:select') {\n            console.log('Sélection de fichier détectée:', event.data); // Debug log\n            \n            const modal = document.getElementById('filemanager-modal');\n            if (modal) {\n                const targetInputId = modal.dataset.targetInput;\n                const input = document.getElementById(targetInputId);\n                \n                if (input) {\n                    console.log('Input trouvé:', input.id); // Debug log\n                    \n                    // Utiliser le chemin public complet du fichier\n                    input.value = event.data.publicPath;\n                    \n                    // Mettre à jour la prévisualisation si c'est une image\n                    if (modal.dataset.isImage === 'true') {\n                        const wrapper = input.closest(`.${defaultConfig.wrapperClass}`);\n                        if (wrapper) {\n                            const previewContainer = wrapper.querySelector(`.${defaultConfig.previewClass}`);\n                            if (previewContainer) {\n                                previewContainer.innerHTML = `<img src=\"${event.data.publicPath}\" alt=\"Preview\" style=\"max-width: 100%; max-height: 100%; object-fit: contain;\">`;\n                            }\n                        }\n                    }\n                    \n                    // Afficher le bouton de réinitialisation\n                    const resetButton = input.parentElement.querySelector(`.${defaultConfig.buttonResetClass}`);\n                    if (resetButton) {\n                        resetButton.style.display = 'block';\n                    }\n                    \n                    // Émettre un événement personnalisé lors de la sélection\n                    const selectEvent = new CustomEvent('krbeFileManager:selected', {\n                        detail: { input, selectedFilePath: event.data.publicPath }\n                    });\n                    input.dispatchEvent(selectEvent);\n                } else {\n                    console.error('Input non trouvé:', targetInputId); // Debug log\n                }\n                modal.style.display = 'none';\n                delete modal.dataset.targetInput;\n                delete modal.dataset.isImage;\n            } else {\n                console.error('Modal non trouvée'); // Debug log\n            }\n        }\n    });\n\n    // Initialisation par défaut\n    initAllFileManagerInputs();\n\n    // Observer pour détecter les ajouts dynamiques d'inputs\n    const observer = new MutationObserver(function(mutations) {\n        mutations.forEach(function(mutation) {\n            mutation.addedNodes.forEach(function(node) {\n                if (node.nodeType === Node.ELEMENT_NODE) {\n                    if (node.matches(`input[${defaultConfig.inputAttribute}]`)) {\n                        createFileManagerWrapper(node);\n                    }\n                    node.querySelectorAll && node.querySelectorAll(`input[${defaultConfig.inputAttribute}]`).forEach(createFileManagerWrapper);\n                }\n            });\n        });\n    });\n    observer.observe(document.body, { childList: true, subtree: true });\n});"],"names":["document","addEventListener","defaultConfig","wrapperClass","inputAttribute","inputText","inputClass","buttonSelectText","buttonSelectClass","buttonResetText","buttonResetClass","previewClass","createFileManagerWrapper","input","dataset","filemanagerInitialized","id","chars","let","i","charAt","Math","floor","random","length","readOnly","wrapper","createElement","className","previewContainer","selectButton","getAttribute","appendChild","type","textContent","setAttribute","resetButton","handleInteraction","e","preventDefault","modal","getElementById","style","display","targetInput","isImage","resetInput","value","querySelector","resetEvent","innerHTML","CustomEvent","detail","dispatchEvent","updateResetButtonVisibility","classList","add","MutationObserver","mutations","forEach","mutation","attributeName","observe","attributes","parentNode","insertBefore","initAllFileManagerInputs","querySelectorAll","window","KrbeFileManagerConfig","Object","assign","KrbeFileManager","setConfig","customConfig","target","contains","event","targetInputId","selectEvent","console","log","data","origin","publicPath","closest","parentElement","selectedFilePath","error","warn","addedNodes","node","nodeType","Node","ELEMENT_NODE","matches","body","childList","subtree"],"mappings":"AAAAA,SAASC,iBAAiB,mBAAoB,WAE1C,IAAMC,EAAgB,CAClBC,aAAc,2BACdC,eAAgB,wBAChBC,UAAW,qBACXC,WAAY,yBACZC,iBAAkB,qBAClBC,kBAAmB,8BACnBC,gBAAiB,gBACjBC,iBAAkB,6BAClBC,aAAc,0BAClB,EA2BA,SAASC,EAAyBC,GAE9B,GAA6C,SAAzCA,EAAMC,QAAQC,uBAAlB,CAGAF,EAAMC,QAAQC,uBAAyB,OAGlCF,EAAMG,KACPH,EAAMG,IAnBd,KACI,IAAMC,EAAQ,uCACdC,IAAIF,EAAK,oBACT,IAAKE,IAAIC,EAAI,EAAGA,EAAI,GAAIA,CAAC,GACrBH,GAAMC,EAAMG,OAAOC,KAAKC,MAAMD,KAAKE,OAAO,EAAIN,EAAMO,MAAM,CAAC,EAE/D,OAAOR,CACX,GAYoC,GAIhCH,EAAMY,SAAW,CAAA,EAGjB,IAAMC,EAAU1B,SAAS2B,cAAc,KAAK,EAC5CD,EAAQE,UAAY1B,EAAcC,aAGlCe,IAAIW,EAAmB,KAQjBC,GAPmD,QAArDjB,EAAMkB,aAAa7B,EAAcE,cAAc,KAC/CyB,EAAmB7B,SAAS2B,cAAc,KAAK,GAC9BC,UAAY1B,EAAcS,aAC3Ce,EAAQM,YAAYH,CAAgB,GAInB7B,SAAS2B,cAAc,QAAQ,GACpDG,EAAaG,KAAO,SACpBH,EAAaI,YAAchC,EAAcK,iBACzCuB,EAAaF,UAAY1B,EAAcM,kBACvCsB,EAAaK,aAAa,OAAQ,QAAQ,EAC1CL,EAAaK,aAAa,WAAY,GAAG,EAGzC,IAAMC,EAAcpC,SAAS2B,cAAc,QAAQ,EAuBnD,SAASU,EAAkBC,GACvBA,EAAEC,eAAe,GAVXC,EAAQxC,SAASyC,eAAe,mBAAmB,KAErDD,EAAME,MAAMC,QAAU,QACtBH,EAAM1B,QAAQ8B,YAAc/B,EAAMG,GAClCwB,EAAM1B,QAAQ+B,QAA+D,QAArDhC,EAAMkB,aAAa7B,EAAcE,cAAc,EAQ/E,CAGA,SAAS0C,IACLjC,EAAMkC,MAAQ,GACd,IAAMlB,EAAmBH,EAAQsB,cAAc,IAAI9C,EAAcS,YAAc,EAOzEsC,GANFpB,IACAA,EAAiBqB,UAAY,IAEjCd,EAAYM,MAAMC,QAAU,OAGT,IAAIQ,YAAY,wBAAyB,CACxDC,OAAQ,CAAEvC,MAAAA,CAAM,CACpB,CAAC,GACDA,EAAMwC,cAAcJ,CAAU,CAClC,CAGA,SAASK,IACLlB,EAAYM,MAAMC,QAAU9B,EAAMkC,MAAQ,QAAU,MACxD,CA9CAX,EAAYH,KAAO,SACnBG,EAAYF,YAAchC,EAAcO,gBACxC2B,EAAYR,UAAY1B,EAAcQ,iBACtC0B,EAAYD,aAAa,OAAQ,QAAQ,EACzCC,EAAYD,aAAa,WAAY,GAAG,EAGxCtB,EAAM0C,UAAUC,IAAItD,EAAcI,UAAU,EAC5CO,EAAMsB,aAAa,WAAY,GAAG,EAClCtB,EAAMsB,aAAa,cAAejC,EAAcG,SAAS,EAwCzDyB,EAAa7B,iBAAiB,QAASoC,CAAiB,EACxDP,EAAa7B,iBAAiB,WAAYoC,CAAiB,EAC3DD,EAAYnC,iBAAiB,QAAS6C,CAAU,EAChDV,EAAYnC,iBAAiB,WAAY,SAASqC,GAC9CA,EAAEC,eAAe,EACjBO,EAAW,CACf,CAAC,EAGDjC,EAAMZ,iBAAiB,QAASoC,CAAiB,EACjDxB,EAAMZ,iBAAiB,WAAYoC,CAAiB,EAGnC,IAAIoB,iBAAiB,SAASC,GAC3CA,EAAUC,QAAQ,SAASC,GACD,eAAlBA,EAAS3B,MAAoD,UAA3B2B,EAASC,eAC3CP,EAA4B,CAEpC,CAAC,CACL,CAAC,EACQQ,QAAQjD,EAAO,CAAEkD,WAAY,CAAA,CAAK,CAAC,EAG5CT,EAA4B,EAG5BzC,EAAMmD,WAAWC,aAAavC,EAASb,CAAK,EAC5Ca,EAAQM,YAAYnB,CAAK,EACzBa,EAAQM,YAAYI,CAAW,EAC/BV,EAAQM,YAAYF,CAAY,CA/GhC,CAgHJ,CAGA,SAASoC,IACUlE,SAASmE,0BAA0BjE,EAAcE,iBAAiB,EAC1EuD,QAAQ9C,GAASD,EAAyBC,CAAK,CAAC,CAC3D,CAlJIuD,OAAOC,uBACPC,OAAOC,OAAOrE,EAAekE,OAAOC,qBAAqB,EAI7DD,OAAOI,gBAAkB,CACrBC,UAAW,SAASC,GAChBJ,OAAOC,OAAOrE,EAAewE,CAAY,EAEzCR,EAAyB,CAC7B,CACJ,EA0IAlE,SAASC,iBAAiB,QAAS,SAASqC,GACpCA,EAAEqC,QAAUrC,EAAEqC,OAAOpB,UAAUqB,SAAS,yBAAyB,IAC3DpC,EAAQxC,SAASyC,eAAe,mBAAmB,KAErDD,EAAME,MAAMC,QAAU,OACtB,OAAOH,EAAM1B,QAAQ8B,YACrB,OAAOJ,EAAM1B,QAAQ+B,QAGjC,CAAC,EAGD7C,SAASC,iBAAiB,WAAY,SAASqC,GACvCA,EAAEqC,QAAUrC,EAAEqC,OAAOpB,UAAUqB,SAAS,yBAAyB,IACjEtC,EAAEC,eAAe,EACXC,EAAQxC,SAASyC,eAAe,mBAAmB,KAErDD,EAAME,MAAMC,QAAU,OACtB,OAAOH,EAAM1B,QAAQ8B,YACrB,OAAOJ,EAAM1B,QAAQ+B,QAGjC,CAAC,EAGDuB,OAAOnE,iBAAiB,UAAW,SAAS4E,GAIxC,IAQUrC,EAEIsC,EACAjE,EA0BIkE,EAxClBC,QAAQC,IAAI,gBAAiBJ,EAAMK,IAAI,EAGlCL,EAAMM,OAKPN,EAAMK,MAA4B,uBAApBL,EAAMK,KAAKjD,OACzB+C,QAAQC,IAAI,iCAAkCJ,EAAMK,IAAI,GAElD1C,EAAQxC,SAASyC,eAAe,mBAAmB,IAE/CqC,EAAgBtC,EAAM1B,QAAQ8B,aAC9B/B,EAAQb,SAASyC,eAAeqC,CAAa,IAG/CE,QAAQC,IAAI,gBAAiBpE,EAAMG,EAAE,EAGrCH,EAAMkC,MAAQ8B,EAAMK,KAAKE,WAGK,SAA1B5C,EAAM1B,QAAQ+B,UACRnB,EAAUb,EAAMwE,QAAQ,IAAInF,EAAcC,YAAc,KAEpD0B,EAAmBH,EAAQsB,cAAc,IAAI9C,EAAcS,YAAc,KAE3EkB,EAAiBqB,uBAAyB2B,EAAMK,KAAKE,+FAM3DhD,EAAcvB,EAAMyE,cAActC,cAAc,IAAI9C,EAAcQ,gBAAkB,KAEtF0B,EAAYM,MAAMC,QAAU,SAI1BoC,EAAc,IAAI5B,YAAY,2BAA4B,CAC5DC,OAAQ,CAAEvC,MAAAA,EAAO0E,iBAAkBV,EAAMK,KAAKE,UAAW,CAC7D,CAAC,EACDvE,EAAMwC,cAAc0B,CAAW,GAE/BC,QAAQQ,MAAM,oBAAqBV,CAAa,EAEpDtC,EAAME,MAAMC,QAAU,OACtB,OAAOH,EAAM1B,QAAQ8B,YACrB,OAAOJ,EAAM1B,QAAQ+B,SAErBmC,QAAQQ,MAAM,mBAAmB,GA/CrCR,QAAQS,KAAK,2BAA2B,CAkDhD,CAAC,EAGDvB,EAAyB,EAGR,IAAIT,iBAAiB,SAASC,GAC3CA,EAAUC,QAAQ,SAASC,GACvBA,EAAS8B,WAAW/B,QAAQ,SAASgC,GAC7BA,EAAKC,WAAaC,KAAKC,eACnBH,EAAKI,iBAAiB7F,EAAcE,iBAAiB,GACrDQ,EAAyB+E,CAAI,EAEjCA,EAAKxB,mBAAoBwB,EAAKxB,0BAA0BjE,EAAcE,iBAAiB,EAAEuD,QAAQ/C,CAAwB,CAEjI,CAAC,CACL,CAAC,CACL,CAAC,EACQkD,QAAQ9D,SAASgG,KAAM,CAAEC,UAAW,CAAA,EAAMC,QAAS,CAAA,CAAK,CAAC,CACtE,CAAC"}